name: Build and Deploy
on: [push]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2 
        with:
          persist-credentials: false

      - name: Cache  💾
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}

      - name: Install and Build 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        uses: actions/setup-node@v1
      
      - name: Build and export
        run: |
          mkdir out
          npm install
          npm run build
          npm run export
        env:
          CI: true

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: out # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch
  sync-s3-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2 
        with:
          persist-credentials: false
      
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION_NAME }}
      
      - name: get updated files
        run: |
          # allow grep to fail
          set +e
          FILES=$(git log --stat="1000" -1 | grep '|' | sed -e "s/public/./" | awk '{print $1}' | grep -e '\.jpg$')
          set -e
          cd ./public
          for file in $FILES; do
            echo $file
            aws s3 cp $file s3://${{ secrets.AWS_S3_BUCKET_NAME }}
          done

      #- name: Sync to S3
      #  run: |
      #    cd ./public
      #    aws s3 sync . s3://${{ secrets.AWS_S3_BUCKET_NAME }}
  invalidate-cloudfront-cache:
    runs-on: ubuntu-latest

    steps:
      - name: get updated files
        run: |
          # allow grep to fail
          set +e
          FILES=$(git log --stat="1000" -1 | grep '|' | sed -e "s/public//" | awk '{print $1}' | grep -e '\.jpg$')
          set -e
          [ -z "$FILES" ] && touch .updated_files && exit 0
          for file in $FILES; do
            echo $file
          done | sort | uniq | tr '\n' ' ' > .updated_files
          cat .updated_files
      
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION }}
          PATHS_FROM: .updated_files
          AWS_REGION: 'global'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
